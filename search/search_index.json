{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs This was made with the purpose of checking out how MkDocs works and how to create new pages, style and theme it, etc. If your index is long enough to be more than one page in the PDF, the plugin will add a blank page at the start, it is an open issue. Contents Installation User Guide Add pages Multilevel Commands Themes Deploy to Github pages Export to PDF About License Release Notes","title":"Home"},{"location":"#mkdocs","text":"This was made with the purpose of checking out how MkDocs works and how to create new pages, style and theme it, etc. If your index is long enough to be more than one page in the PDF, the plugin will add a blank page at the start, it is an open issue.","title":"MkDocs"},{"location":"#contents","text":"","title":"Contents"},{"location":"#installation","text":"","title":"Installation"},{"location":"#user-guide","text":"Add pages Multilevel Commands","title":"User Guide"},{"location":"#themes","text":"","title":"Themes"},{"location":"#deploy-to-github-pages","text":"","title":"Deploy to Github pages"},{"location":"#export-to-pdf","text":"","title":"Export to PDF"},{"location":"#about","text":"License Release Notes","title":"About"},{"location":"gh-pages/","text":"Deploy to Github pages Simply run the following command to deploy your documentation's site to Github pages mkdocs gh-deploy You should never edit files in your pages repository by hand if you're using the gh-deploy command because you will lose your work the next time you run the command. Reference: https://github.com/mkdocs/mkdocs/blob/master/docs/user-guide/deploying-your-docs.md","title":"Github pages"},{"location":"gh-pages/#deploy-to-github-pages","text":"Simply run the following command to deploy your documentation's site to Github pages mkdocs gh-deploy You should never edit files in your pages repository by hand if you're using the gh-deploy command because you will lose your work the next time you run the command. Reference: https://github.com/mkdocs/mkdocs/blob/master/docs/user-guide/deploying-your-docs.md","title":"Deploy to Github pages"},{"location":"installation/","text":"Installation With a package manager, just search for \"MkDocs\" Manual installation, for this you need to have Python and pip installed. After having these, just run this two commands to install it and verify it was installed correctly. pip install mkdocs mkdocs --version For more info and troubleshooting, refer to the main site Create a new project To create a new MkDocs project inside your code repository, all you have to do is follow the next commands mkdocs new my-project Where my-project is either your project's folder or, if you are starting with documentation and there is no repository yet, a new folder name that will contain everything. The command above will create for us our config file mkdocs.yml and a docs folder where we will specify our source files for all documentation. Structure The structure and contents you want to apply will always depend on what your project's code contains, but here are some good standards to follow (in case it applies) docs/ index.md about.md setup.md (Steps to run the project) configuration-options.md license.md img/ You can add any other important feature or component regarding your specific project. Serve project The following command will be used to preview our documentation locally. mkdocs serve You will be able to preview it at 127.0.0.1:8000 or where the terminal indicates.","title":"Installation"},{"location":"installation/#installation","text":"With a package manager, just search for \"MkDocs\" Manual installation, for this you need to have Python and pip installed. After having these, just run this two commands to install it and verify it was installed correctly. pip install mkdocs mkdocs --version For more info and troubleshooting, refer to the main site","title":"Installation"},{"location":"installation/#create-a-new-project","text":"To create a new MkDocs project inside your code repository, all you have to do is follow the next commands mkdocs new my-project Where my-project is either your project's folder or, if you are starting with documentation and there is no repository yet, a new folder name that will contain everything. The command above will create for us our config file mkdocs.yml and a docs folder where we will specify our source files for all documentation.","title":"Create a new project"},{"location":"installation/#structure","text":"The structure and contents you want to apply will always depend on what your project's code contains, but here are some good standards to follow (in case it applies) docs/ index.md about.md setup.md (Steps to run the project) configuration-options.md license.md img/ You can add any other important feature or component regarding your specific project.","title":"Structure"},{"location":"installation/#serve-project","text":"The following command will be used to preview our documentation locally. mkdocs serve You will be able to preview it at 127.0.0.1:8000 or where the terminal indicates.","title":"Serve project"},{"location":"pdf-export/","text":"Export to PDF File You need to download the plugin mkdocs-pdf-export-plugin through pip. Also, download the required dependencies specified in the Github, for WeasyPrint . Github repo: https://github.com/zhaoterryy/mkdocs-pdf-export-plugin WeasyPrint installation: https://weasyprint.readthedocs.io/en/latest/install.html# Example You can see the functionality of this plugin inside the site, where there is a button to download the PDF for all the documentation, which is also located inside the docs/ folder as all-documentation.pdf .","title":"Export to PDF"},{"location":"pdf-export/#export-to-pdf-file","text":"You need to download the plugin mkdocs-pdf-export-plugin through pip. Also, download the required dependencies specified in the Github, for WeasyPrint . Github repo: https://github.com/zhaoterryy/mkdocs-pdf-export-plugin WeasyPrint installation: https://weasyprint.readthedocs.io/en/latest/install.html#","title":"Export to PDF File"},{"location":"pdf-export/#example","text":"You can see the functionality of this plugin inside the site, where there is a button to download the PDF for all the documentation, which is also located inside the docs/ folder as all-documentation.pdf .","title":"Example"},{"location":"theme/","text":"Using a third party theme Small description on how I changed this documentation's theme to the mkdocs-material theme. Material So I chose an external theme, and first thing I had to do, was to install it through pip pip install mkdocs-material There are other alternatives to download this theme, for instance, through git, for more info, check here . After that, just change the theme specified on the config file (mkdocs.yml) theme: name: material Reference For more reference on this specific theme, check out its github: https://github.com/squidfunk/mkdocs-material More themes For more external themes, check here . To check out the built-in themes,just check out the official documentation of MkDocs, here .","title":"Themes"},{"location":"theme/#using-a-third-party-theme","text":"Small description on how I changed this documentation's theme to the mkdocs-material theme.","title":"Using a third party theme"},{"location":"theme/#material","text":"So I chose an external theme, and first thing I had to do, was to install it through pip pip install mkdocs-material There are other alternatives to download this theme, for instance, through git, for more info, check here . After that, just change the theme specified on the config file (mkdocs.yml) theme: name: material","title":"Material"},{"location":"theme/#reference","text":"For more reference on this specific theme, check out its github: https://github.com/squidfunk/mkdocs-material","title":"Reference"},{"location":"theme/#more-themes","text":"For more external themes, check here . To check out the built-in themes,just check out the official documentation of MkDocs, here .","title":"More themes"},{"location":"about/license/","text":"MIT License Copyright (c) [2021] [Name] Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/release-notes/","text":"Release Notes Upgrade Steps Step 1 Breaking Changes At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut e New Features Documentation Added pipeline Bug Fixes Fixed several bugs related to something Improvements Improved time to compile Something else Other Changes A change","title":"Release Notes"},{"location":"about/release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"about/release-notes/#upgrade-steps","text":"Step 1","title":"Upgrade Steps"},{"location":"about/release-notes/#breaking-changes","text":"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut e","title":"Breaking Changes"},{"location":"about/release-notes/#new-features","text":"Documentation Added pipeline","title":"New Features"},{"location":"about/release-notes/#bug-fixes","text":"Fixed several bugs related to something","title":"Bug Fixes"},{"location":"about/release-notes/#improvements","text":"Improved time to compile Something else","title":"Improvements"},{"location":"about/release-notes/#other-changes","text":"A change","title":"Other Changes"},{"location":"user-guide/add/","text":"About Adding more pages It's really simple to add more pages to your documentation, you just have to create your new markdown file, add your contents to it, and inside the config file (mkdocs.yml) add the new .md to your nav. Deploying MkDocs has a very useful command you can use if you are using github, and want to deploy to github pages, just using mkdocs gh-deploy References official documentation","title":"Add pages"},{"location":"user-guide/add/#about","text":"","title":"About"},{"location":"user-guide/add/#adding-more-pages","text":"It's really simple to add more pages to your documentation, you just have to create your new markdown file, add your contents to it, and inside the config file (mkdocs.yml) add the new .md to your nav.","title":"Adding more pages"},{"location":"user-guide/add/#deploying","text":"MkDocs has a very useful command you can use if you are using github, and want to deploy to github pages, just using mkdocs gh-deploy","title":"Deploying"},{"location":"user-guide/add/#references","text":"official documentation","title":"References"},{"location":"user-guide/commands/","text":"Commands Main commands you will use. mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Commands"},{"location":"user-guide/commands/#commands","text":"Main commands you will use. mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"user-guide/commands/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"user-guide/multilevel/","text":"Multilevel structure Currently, MkDocs allows you to have up to a second level of navigation. Configure Pages and Navigation The nav configuration setting in your mkdocs.yml file defines which pages are included in the global site navigation menu as well as the structure of that menu. If not provided, the navigation will be automatically created by discovering all the Markdown files in the documentation directory. An automatically created navigation configuration will always be sorted alphanumerically by file name (except that index files will always be listed first within a sub-section). You will need to manually define your navigation configuration if you would like your navigation menu sorted differently. A minimal navigation configuration could look like this: nav: - 'index.md' - 'about.md' All paths in the navigation configuration must be relative to the docs_dir configuration option. If that option is set to the default value, docs , the source files for the above configuration would be located at docs/index.md and docs/about.md . The above example will result in two navigation items being created at the top level and with their titles inferred from the contents of the Markdown file or, if no title is defined within the file, of the file name. To override the title in the nav setting add a title right before the filename. nav: - Home: 'index.md' - About: 'about.md' Note that if a title is defined for a page in the navigation, that title will be used throughout the site for that page and will override any title defined within the page itself. Navigation sub-sections can be created by listing related pages together under a section title. For example: nav: - Home: 'index.md' - 'User Guide': - 'Writing your docs': 'writing-your-docs.md' - 'Styling your docs': 'styling-your-docs.md' - About: - 'License': 'license.md' - 'Release Notes': 'release-notes.md' References: https://github.com/mkdocs/mkdocs/blob/master/docs/user-guide/writing-your-docs.md","title":"Multilevel"},{"location":"user-guide/multilevel/#multilevel-structure","text":"Currently, MkDocs allows you to have up to a second level of navigation.","title":"Multilevel structure"},{"location":"user-guide/multilevel/#configure-pages-and-navigation","text":"The nav configuration setting in your mkdocs.yml file defines which pages are included in the global site navigation menu as well as the structure of that menu. If not provided, the navigation will be automatically created by discovering all the Markdown files in the documentation directory. An automatically created navigation configuration will always be sorted alphanumerically by file name (except that index files will always be listed first within a sub-section). You will need to manually define your navigation configuration if you would like your navigation menu sorted differently. A minimal navigation configuration could look like this: nav: - 'index.md' - 'about.md' All paths in the navigation configuration must be relative to the docs_dir configuration option. If that option is set to the default value, docs , the source files for the above configuration would be located at docs/index.md and docs/about.md . The above example will result in two navigation items being created at the top level and with their titles inferred from the contents of the Markdown file or, if no title is defined within the file, of the file name. To override the title in the nav setting add a title right before the filename. nav: - Home: 'index.md' - About: 'about.md' Note that if a title is defined for a page in the navigation, that title will be used throughout the site for that page and will override any title defined within the page itself. Navigation sub-sections can be created by listing related pages together under a section title. For example: nav: - Home: 'index.md' - 'User Guide': - 'Writing your docs': 'writing-your-docs.md' - 'Styling your docs': 'styling-your-docs.md' - About: - 'License': 'license.md' - 'Release Notes': 'release-notes.md' References: https://github.com/mkdocs/mkdocs/blob/master/docs/user-guide/writing-your-docs.md","title":"Configure Pages and Navigation"}]}